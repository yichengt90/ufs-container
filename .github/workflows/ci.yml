name: CI/CD

on: push

#on:
#  schedule:
#    - cron: '00 00,03,06,09,12,15,18,21 * * *'

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    name: CI/CD stable-nightly branch
    steps:
      - uses: actions/checkout@v2
        with:
          ref: 'test2'
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}   
          
      - name: get ufs tag
        run: |
          echo "First get ufs tag remotely!"
          #
          cd docker
          source functions.sh
          parse_yaml ./ufs_lib_version.yaml > .env
          echo ${ufs_tag}
          echo "ufs_tag=${ufs_tag}" >> $GITHUB_ENV
          more .env
          
      - name: Prep
        id: prep
        run: |
          #
          cd docker/
          echo ${{ env.ufs_tag }}
          #
          echo "Now preparing Docker files!"
          #
          cat ./docker-compose.yml.template > ./docker-compose.yml
          sed -i 's/@UFS_TAG/'$"${{ env.ufs_tag }}"'/g' ./docker-compose.yml
          more ./docker-compose.yml
          #
          source .env
          cat ./ufs-core-ubuntu/Dockerfile_template > ./ufs-core-ubuntu/Dockerfile
          sed -i 's/@UFS_TAG/'$"${{ env.ufs_tag }}"'/g' ./ufs-core-ubuntu/Dockerfile
          sed -i 's/${Cmake_version}/'$"${Cmake_version}"'/g' ./ufs-core-ubuntu/Dockerfile
          sed -i 's/${bacio_version}/'$"${bacio_version}"'/g' ./ufs-core-ubuntu/Dockerfile
          sed -i 's/${sp_version}/'$"${sp_version}"'/g' ./ufs-core-ubuntu/Dockerfile
          sed -i 's/${w3nco_version}/'$"${w3nco_version}"'/g' ./ufs-core-ubuntu/Dockerfile
          sed -i 's/${esmf_version}/'$"${esmf_version}"'/g' ./ufs-core-ubuntu/Dockerfile
          sed -i 's/${fms_version}/'$"${fms_version}"'/g' ./ufs-core-ubuntu/Dockerfile                    
          more ./ufs-core-ubuntu/Dockerfile
          #
          cat ./ufs-rt1-ubuntu/Dockerfile_template > ./ufs-rt1-ubuntu/Dockerfile
          sed -i 's/@UFS_TAG/'$"${{ env.ufs_tag }}"'/g' ./ufs-rt1-ubuntu/Dockerfile
          more ./ufs-rt1-ubuntu/Dockerfile
      
      - name: Test
        id: test
        run: |
          echo "Now build and run RT with ufs tag!"
          #
          cd docker/
          OUTPUT=1
          docker-compose pull
          docker-compose up
          OUTPUT=0
          echo "::set-output name=OUTPUT::$OUTPUT"
          
      - name: Deploy
        if: ${{ (steps.test.outputs.OUTPUT == 0) }}
        run: |            
          #
          cd docker
          check_image=$(docker manifest inspect clouden90/ufs-core-ubuntu:${{ env.ufs_tag }} > /dev/null ; echo $?)
          echo $check_image
          if [ $check_image != 0 ]; then
            echo "Passed tests! Now will deploy new ufs core image!"
            docker push clouden90/ufs-core-ubuntu:${{ env.ufs_tag }}
          else
            echo "Passed tests! But ufs core image already exists! Have a nice day!"
          fi
